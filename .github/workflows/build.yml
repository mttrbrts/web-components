name: Build

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Unit Tests

    strategy:
      matrix:
        node-version:
          # - 12.x
          - 14.x
        os:
          # - ubuntu-latest
          # - windows-latest
          - macOS-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        id: npm-and-build-cache
        with:
          path: |
            ~/.cache/Cypress
            build
            node_modules
          key: ${{ runner.os }}-node_modules-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-build-

      - run: npx lerna bootstrap && npx lerna run build
      - run: npm run build --if-present
      - run: npm test

      - name: 'Storybook Tests - Chrome'
        uses: cypress-io/github-action@v2
        with:
          start: npm run storybook:ci
          wait-on: 'http://localhost:9009'
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: 'Storybook - Chrome'
          project: packages/storybook
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs:
      - build

    name: Publish to npm
    if: ${{ success() && github.event_name == 'push' && github.repository_owner == 'accordproject' }}
    runs-on: ubuntu-latest

    outputs:
      job-status: ${{ job.status }}

    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
    
      - name: Build
        run: npx lerna bootstrap && npx lerna run build

      - name: timestamp
        id: timestamp
        run: |
          node ./scripts/timestamp.js

      - name: build and publish
        run: |
          npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
          npm version --no-git-tag-version --yes --exact ${{ steps.timestamp.outputs.stamp }}
          npx lerna version --no-git-tag-version --yes --exact ${{ steps.timestamp.outputs.stamp }}
          npx lerna exec --ignore storybook -- npm publish --access public --ignore-scripts --tag=unstable 2>&1
